{
  "name": "dustjs-linkedin",
  "version": "1.0.0",
  "author": {
    "name": "Aleksander Williams"
  },
  "description": "Asynchronous templates for the browser and node.js",
  "contributors": [
    {
      "name": "Jairo de Morais",
      "email": "jdemorais@linkedin.com"
    },
    {
      "name": "Veena Basavaraj",
      "email": "vbasavaraj@linkedin.com"
    }
  ],
  "scripts": {
    "test": "node test/jasmine-test/server/specRunner.js",
    "start": "node src/build.js"
  },
  "bin": {
    "dustc": "./bin/dustc"
  },
  "main": "./lib/dust",
  "repository": {
    "type": "git",
    "url": "https://jairodemorais@github.com/linkedin/dustjs.git"
  },
  "keywords": [
    "templates",
    "views"
  ],
  "devDependencies": {
    "jasmine-node": "1.0.x",
    "cover": "0.2.x"
  },
  "license": "MIT",
  "engine": {
    "node": ">=0.5"
  },
  "readme": "Dust  [![Build Status](https://secure.travis-ci.org/linkedin/dustjs.png)](http://travis-ci.org/linkedin/dustjs)\n====\n\nDemo & Guide\n------------\nExtensive docs and a full demo are available at <http://akdubya.github.com/dustjs>\n\n\n> Asynchronous templates for the browser and node.js\n\n#### <http://akdubya.github.com/dustjs> #\n\nHighlights!\n----\n\nI like [Mustache](http://mustache.github.com) and variants but none of them offers quite what I need.\n\nUse Dust if you want these things:\n\n* async/streaming operation\n* browser/node compatibility\n* extended Mustache/ctemplate syntax\n* clean, low-level API\n* [high performance](http://akdubya.github.com/dustjs/benchmark/index.html)\n* composable templates\n\n\nThis is the LinkedIn fork of dust.js\n====================================\n\nDetails in the blog post : http://engineering.linkedin.com/frontend/leaving-jsps-dust-moving-linkedin-dustjs-client-side-templates\n\nWe will gradually be extending this library with helper functions and bug fixes. \n\nCurrent LinkedIn additions include:\n--------------------------\n\n* Fix to peg.js to print the line and column number for syntax errors in dust templates\n* Fix to support > node0.4 \n* Addition of jasmine test suite, BDD with dust.js \n* There are cases of rendering logic that are best done in templates. @if helper that relies entirely on the js eval for expression evaluation, The perf results are here: <http://jsperf.com/dust-if>. We intend to replace the slow js eval with a expression parser soon \n* Section index for lists of maps stored in the dust context for ease of writing simple logic in templates\n* Section size for lists of maps stored in the dust context for ease of  writing simple logic in templates\n* Automated Travis CI integration, jasmine for BDD, code coverage report\n* Extend grammar to relax whitespace/eol \n* Add support for rhino in the dust core\n* improve compile times by 10X with changes to how we use peg parser\n* Extend filters for JSON.stringify and JSON.parse\n* logic helpers for select/ switch\n* Support numbers in dust inline params\n* Extend partials to support inline params\n* Support for array references, hence list elements can be accessed via the [] notation\n* Support dynamic blocks, similar to dynamic partials\n* Add pipe support for node\n* Documentation/wiki on the best practices for using dustjs\n\n\nInstallation\n------------\n\nFor Linkedin Dustjs\n\n    $ npm install dustjs-linkedin\n\nTo render compiled templates in the browser:\n\n    <script src=\"dust-core-1.0.0.min.js\"></script>\n\nTo compile a template on the command line, use the dustc command.\nIts syntax is:\n\n    dustc [{-n|--name}=<template_name>] {inputfilename|-} [<outputfilename>]\n\nFor example, to compile a template on the command line and have it\nregistered under the same name as the source file:\n\n    $ dustc template.html\n\nYou can customize the name under which the template is registered:\n\n    $ dustc --name=mytemplate template.html\n\nRunning Tests\n------------\n\nTo run tests:\n\n    $ make test\n\nTo generate code coverage report:\n\n    $ npm install cover -g\n    $ make coverage\n    \nTo view HTML test coverage report:\n\n    $ open cover_html/index.html\n",
  "_id": "dustjs-linkedin@1.0.0",
  "dist": {
    "shasum": "406973497786860976ef510ce705cf787abf4cbd"
  },
  "_from": "dustjs-linkedin"
}
